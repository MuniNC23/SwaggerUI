{
  "swagger": "2.0",
  "info": {
    "title": "Registration API",
    "version": "1.0.47"
  },
  "host": "novo-mule-dev.mynovocure.internal:9002",
  "basePath": "/registration",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api": {
      
    },
    "/api/invite": {
      "x-amf-description": "Single item of invite",
      "get": {
        "operationId": "Get an invite",
        "description": "This resource can be used to retrieve one or more invites codes for a given email that were previously generated.       \n",
        "tags": [
          "Invitation"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "type": "string",
            "pattern": "^.+@.+\\..+$",
            "maxLength": 241
          },
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Registration - 400 Error Response",
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "REGISTRATION:ERROR",
                  "errorCode": "01",
                  "errorMessage": "No invite(s) found."
                }
              },
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "$ref": "#/definitions/errorInfo"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      },
      "post": {
        "operationId": "Create an invite",
        "description": "This resource can be used to generate an invite code for a given application.  This invite code will be used to create a system user that will be linked with our IDP. All crendentials, password resets are managed at the IDP. \n",
        "tags": [
          "Invitation"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_1"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created successfully.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_2"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Registration - 400 Error Response",
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "REGISTRATION:ERROR",
                  "errorCode": "03",
                  "errorMessage": "Invalid expiration date time. It should be set to 30 min or more into the future."
                }
              },
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "$ref": "#/definitions/errorInfo"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      },
      "delete": {
        "operationId": "Delete an invite",
        "description": "This resource can be used to delete an invite code for a given application. The Invite will be soft deleted and invalidated. \n",
        "tags": [
          "Invitation"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_4"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Registration - 400 Error Response",
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "REGISTRATION:ERROR",
                  "errorCode": "04",
                  "errorMessage": "An Invite for this email is already registered."
                }
              },
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "$ref": "#/definitions/errorInfo"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      }
    },
    "/api/validate-invite": {
      "x-amf-description": "Single item of validate-invite",
      "post": {
        "operationId": "Validate an invite",
        "description": "This resource is used to validate a previously generated invite. Successful validations will count towards the maxNumberOfAttempts if either a matching email or invite code is supplied.\n",
        "tags": [
          "Invitation"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_6"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Registration - 400 Error Response",
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "REGISTRATION:ERROR",
                  "errorCode": "06",
                  "errorMessage": "Invite code is expired."
                }
              },
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "$ref": "#/definitions/errorInfo"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      }
    },
    "/api/register-invite": {
      "x-amf-description": "Single item of register-invite",
      "post": {
        "operationId": "Register a user via IDP",
        "description": "Used by the IDP Only. This resource is used during the registraion flow to create a user based on a previous invite code that was generated. If successful, a user wil be created in both the IDP and end system.\n",
        "tags": [
          "Registration"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_7"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created successfully.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_8"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Registration - 400 Error Response",
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "REGISTRATION:ERROR",
                  "errorCode": "06",
                  "errorMessage": "Invite code is expired."
                }
              },
              "type": "object",
              "required": [
                "error"
              ],
              "properties": {
                "error": {
                  "$ref": "#/definitions/errorInfo"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      }
    },
    "/api/register-invite-jwt": {
      "x-amf-description": "Single item of register-invite-jwt",
      "post": {
        "operationId": "Register a user via CDC using Jwt",
        "description": "Used by the CDC Only. This resource is used during the registraion flow to create a user based on a previous invite code that was generated. If successful, a user wil be created in both the CDC and end system.\n",
        "tags": [
          "Registration"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_10"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:BAD_RERQUEST",
                  "errorCode": "400",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      }
    },
    "/api/forgot-password-jwt": {
      "x-amf-description": "Single item of forgot-password-jwt",
      "post": {
        "operationId": "Send a unique code to user's mobile",
        "description": "Used by the CDC Only. This resource is used to send a unique code by SMS during the forgot password flow. If successful, a user will received the code on his mobile phone. If the phone number is invalid, it will be reported so but with 200 status.\n",
        "tags": [
          "Forgot Password"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_11"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_12"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:BAD_RERQUEST",
                  "errorCode": "400",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      }
    },
    "/api/generateJWS": {
      "x-amf-description": "Single item of generateJWS",
      "post": {
        "operationId": "Generates a JWS",
        "description": "Used by the developers or testers Only. This resource is used to generate a JWS for a given JSON header and payload info using a test cert.\n",
        "tags": [
          "JWS"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "description": "client id provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "name": "client_secret",
            "description": "client secret provided to you by Novocure API Team",
            "required": true,
            "in": "header",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "$ref": "#/definitions/type_13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "$ref": "#/definitions/type_14"
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:BAD_RERQUEST",
                  "errorCode": "400",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "APIKIT:NOT_FOUND",
                  "errorCode": "404",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          },
          "429": {
            "description": "An API request rate limit has been exceeded.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": "Quota has been exceeded"
              }
            }
          },
          "500": {
            "description": "An internal error occurred while processing the API request.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "example": {
                "error": {
                  "correlationId": "684928d0-a97b-11ed-a4c6-0050562a0fa4",
                  "errorType": "HTTP:CONNECTIVITY",
                  "errorCode": "500",
                  "errorMessage": "A problem occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "lib.basicAuth": [
              
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "type": {
      "title": "Registration - Get Invite Response",
      "example": [
        {
          "email": "jhopkins@jhu.edu",
          "inviteCode": "062579",
          "inviteStatus": "Registered",
          "inviteStatusCode": "02",
          "numberOfAttempts": 3,
          "userType": "Healthcare Provider",
          "createdDateTime": "2023-12-17T05:00:00Z",
          "registeredDateTime": "2023-12-17T05:12:00Z",
          "expirationDateTime": "2023-12-17T05:30:00Z",
          "lastModifiedDateTime": "2023-12-17T05:30:00Z"
        }
      ],
      "type": "array",
      "items": {
        "$ref": "#/definitions/inviteGetResponse"
      }
    },
    "errorInfo": {
      "type": "object",
      "required": [
        "errorType",
        "errorMessage",
        "errorCode",
        "correlationId"
      ],
      "properties": {
        "errorType": {
          "$ref": "#/definitions/errorType"
        },
        "errorMessage": {
          "x-amf-union": [
            {
              "$ref": "#/definitions/errorMessageType"
            },
            {
              "type": "string"
            }
          ]
        },
        "errorCode": {
          "x-amf-union": [
            {
              "$ref": "#/definitions/errorCodeType"
            },
            {
              "type": "string"
            }
          ]
        },
        "correlationId": {
          "$ref": "#/definitions/correlationId"
        }
      }
    },
    "type_1": {
      "title": "Registration - Create Invite Request",
      "example": {
        "email": "jhopkins@jhu.edu",
        "inviteCodeType": "Numeric",
        "inviteCodeCharacterLength": 6,
        "userType": "Healthcare Provider",
        "expirationDateTime": "2023-12-17T05:30:00Z",
        "appName": "HCP Portal 2.0",
        "invalidateActiveInvites": true
      },
      "type": "object",
      "required": [
        "inviteCodeType",
        "appName",
        "inviteCodeCharacterLength",
        "userType",
        "expirationDateTime",
        "email"
      ],
      "properties": {
        "inviteCodeType": {
          "$ref": "#/definitions/inviteCodeType"
        },
        "invalidateActiveInvites": {
          "description": "When true, the logic will invalidate any active invites for the given email before creating a new invite.",
          "default": false,
          "type": "boolean"
        },
        "appName": {
          "$ref": "#/definitions/appName"
        },
        "inviteCodeCharacterLength": {
          "description": "Specifies the number of the characters to be included in the invitecode",
          "example": 6,
          "type": "integer",
          "minimum": 4,
          "maximum": 10
        },
        "userType": {
          "$ref": "#/definitions/userType"
        },
        "expirationDateTime": {
          "description": "Date and Time in (UTC TimeZone) the invite will expire. Each experience can have different expiration policys, so experience requirements will determine value. Expiration Date in the past is not permitted.",
          "example": "2023-12-17T05:30:00Z",
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "$ref": "#/definitions/inviteEmail"
        }
      }
    },
    "type_2": {
      "title": "Registration - Create Invite Response",
      "example": {
        "message": "Invite Code is generated successfully",
        "inviteCode": "062579"
      },
      "type": "object",
      "required": [
        "inviteCode",
        "message"
      ],
      "properties": {
        "inviteCode": {
          "$ref": "#/definitions/inviteCode"
        },
        "message": {
          "$ref": "#/definitions/message"
        }
      }
    },
    "type_3": {
      "title": "Registration - Delete Invite Request",
      "example": {
        "email": "jhopkins@jhu.edu",
        "inviteCode": "062579"
      },
      "type": "object",
      "required": [
        "inviteCode",
        "email"
      ],
      "properties": {
        "inviteCode": {
          "$ref": "#/definitions/inviteCode"
        },
        "email": {
          "$ref": "#/definitions/inviteEmail"
        }
      }
    },
    "type_4": {
      "title": "Registration - Delete Invite Response",
      "example": {
        "message": "Invite Code is deleted successfully"
      },
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/message"
        }
      }
    },
    "type_5": {
      "title": "Registration - Validate Invite Request",
      "example": {
        "email": "jhopkins@jhu.edu",
        "inviteCode": "062579"
      },
      "type": "object",
      "required": [
        "inviteCode",
        "email"
      ],
      "properties": {
        "inviteCode": {
          "$ref": "#/definitions/inviteCode"
        },
        "email": {
          "$ref": "#/definitions/inviteEmail"
        }
      }
    },
    "type_6": {
      "title": "Registration - Validate Invite Response",
      "example": {
        "message": "Invite Code is validated successfully"
      },
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/message"
        }
      }
    },
    "type_7": {
      "title": "Registration - Register Invite Request",
      "example": {
        "email": "jhopkins@jhu.edu",
        "inviteCode": "062579"
      },
      "type": "object",
      "required": [
        "inviteCode",
        "email"
      ],
      "properties": {
        "inviteCode": {
          "$ref": "#/definitions/inviteCode"
        },
        "email": {
          "$ref": "#/definitions/inviteEmail"
        }
      }
    },
    "type_8": {
      "title": "Registration - Register Invite Response",
      "example": {
        "message": "Invite is successfully registered"
      },
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/message"
        }
      }
    },
    "type_9": {
      "title": "Registration - Register Invite Jwt Request",
      "example": {
        "jws": "eyJhbGciOiJSUzI1NiIsImtpZCI6IlJFUTBNVVE1TjBOQ1JUSkVNemszTTBVMVJrTkRRMFUwUTBNMVJFRkJSamhETWpkRU5VRkJRZyJ9.eyJhcGlLZXkiOiI0X3JLbFAzNGtwQWdKMnMzcHNxMlNXcXciLCJjYWxsSUQiOiI4MzI3MGQ3NDA3ODc0Yjc5OTQzZDJhMzAwZWUyNmMxNCIsImV4dGVuc2lvblBvaW50IjoiT25CZWZvcmVBY2NvdW50c1JlZ2lzdGVyIiwiZGF0YSI6eyJwYXJhbXMiOnsiZW1haWwiOiJ0ZXN0MTAwQHRlc3QuY29tIiwicGFzc3dvcmQiOiJQYXNzd29yZDEwMCQiLCJwcm9maWxlIjp7ImZpcnN0TmFtZSI6IkZpcnN0MTAwIiwibGFzdE5hbWUiOiJMYXN0MTAwIn0sImxhbmciOiJlbiIsInJlZ1NvdXJjZSI6Imh0dHBzOi8vaGNwLWd3LWRldi9zYXAvYmMvdWk1X3VpNS9zYXAvemhjcF9yZWdfbG9nb24vaW5kZXguaHRtbCIsImRhdGEiOnsibWFzdGVyIjp7ImxpY2Vuc2VOdW0iOiIxMjMzNDU2Nzg5MCIsInVuaXF1ZUNvZGUiOiJhYmM5QUQifSwidGVybXMiOnRydWV9LCJwcmVmZXJlbmNlcyI6eyJ0ZXJtcyI6eyJ0b3Nfbm92b2N1cmUiOnsiaXNDb25zZW50R3JhbnRlZCI6IlRSVUUifX0sInByaXZhY3kiOnsicHJpdmFjeV9wb2xpY3lfbm92b2N1cmUiOnsiaXNDb25zZW50R3JhbnRlZCI6IlRSVUUifX19fSwiY29udGV4dCI6eyJjbGllbnRJUCI6IjczLjE2NS44MC4yNTUifX19.SVjAcMcUg6dXU_q-ly8nkMmC1DBdAvnNB3hfbDHmYXrP3kKwsHaLRvClsfXxhT8jaymeb9oVXITwNKPAJR7yveKg86HEKCl9YYNad8jtZg7jpsWVim-eeLHs1kaPfcaG3tNXRdLuIaJgbflLIfrQMqSnkAqp2hKxyLv0jg2yGgIfR2l-2B9Rkw8eDlMxuy4_uY7BLxzrmG6JSyDChqRxYnKLlEGt3XNLuhUavp_hS5NeBXCnEMt9TDGLKZRAS_kZlOSD2CAUUS5xh6bz6JUNSSekh6m5gfIbNfsc6TgXprSd1wQn4t3qiYaClRKrI0721dyVtOZIqDsumQB9W3QEfg"
      },
      "type": "object",
      "required": [
        "jws"
      ],
      "properties": {
        "jws": {
          "description": "The JWS input payload required to register a user which is needed to create a user in our IDP",
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]+[.]{1}[A-Za-z0-9_-]+[.]{1}[A-Za-z0-9_-]+$",
          "minLength": 100,
          "maxLength": 2048
        }
      }
    },
    "type_10": {
      "title": "Registration - Register Invite Jwt Response",
      "example": {
        "status": "ENRICH",
        "correlationId": "",
        "data": {
          "data": {
            "master": {
              "contactId": "0000001284",
              "uniqueCode": "000000",
              "licenseNum": ""
            }
          },
          "profile": {
            "phones": [
              {
                "number": "2152905555",
                "type": "CELL"
              },
              {
                "number": "2152905555",
                "type": "PHONE"
              }
            ]
          }
        }
      },
      "type": "object",
      "required": [
        "correlationId",
        "data",
        "status"
      ],
      "properties": {
        "correlationId": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "required": [
            "data",
            "profile"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "master"
              ],
              "properties": {
                "master": {
                  "type": "object",
                  "required": [
                    "contactId",
                    "uniqueCode",
                    "licenseNum"
                  ],
                  "properties": {
                    "contactId": {
                      "type": "string"
                    },
                    "uniqueCode": {
                      "type": "string"
                    },
                    "licenseNum": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "profile": {
              "type": "object",
              "required": [
                "phones"
              ],
              "properties": {
                "phones": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Phone"
                  }
                }
              }
            }
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "type_11": {
      "title": "Registration - Register Invite Jwt Request",
      "example": {
        "jws": "eyJhbGciOiJSUzI1NiIsImtpZCI6IlJFUTBNVVE1TjBOQ1JUSkVNemszTTBVMVJrTkRRMFUwUTBNMVJFRkJSamhETWpkRU5VRkJRZyJ9.eyJhcGlLZXkiOiI0X3JLbFAzNGtwQWdKMnMzcHNxMlNXcXciLCJjYWxsSUQiOiI4MzI3MGQ3NDA3ODc0Yjc5OTQzZDJhMzAwZWUyNmMxNCIsImV4dGVuc2lvblBvaW50IjoiT25CZWZvcmVBY2NvdW50c1JlZ2lzdGVyIiwiZGF0YSI6eyJwYXJhbXMiOnsiZW1haWwiOiJ0ZXN0MTAwQHRlc3QuY29tIiwicGFzc3dvcmQiOiJQYXNzd29yZDEwMCQiLCJwcm9maWxlIjp7ImZpcnN0TmFtZSI6IkZpcnN0MTAwIiwibGFzdE5hbWUiOiJMYXN0MTAwIn0sImxhbmciOiJlbiIsInJlZ1NvdXJjZSI6Imh0dHBzOi8vaGNwLWd3LWRldi9zYXAvYmMvdWk1X3VpNS9zYXAvemhjcF9yZWdfbG9nb24vaW5kZXguaHRtbCIsImRhdGEiOnsibWFzdGVyIjp7ImxpY2Vuc2VOdW0iOiIxMjMzNDU2Nzg5MCIsInVuaXF1ZUNvZGUiOiJhYmM5QUQifSwidGVybXMiOnRydWV9LCJwcmVmZXJlbmNlcyI6eyJ0ZXJtcyI6eyJ0b3Nfbm92b2N1cmUiOnsiaXNDb25zZW50R3JhbnRlZCI6IlRSVUUifX0sInByaXZhY3kiOnsicHJpdmFjeV9wb2xpY3lfbm92b2N1cmUiOnsiaXNDb25zZW50R3JhbnRlZCI6IlRSVUUifX19fSwiY29udGV4dCI6eyJjbGllbnRJUCI6IjczLjE2NS44MC4yNTUifX19.SVjAcMcUg6dXU_q-ly8nkMmC1DBdAvnNB3hfbDHmYXrP3kKwsHaLRvClsfXxhT8jaymeb9oVXITwNKPAJR7yveKg86HEKCl9YYNad8jtZg7jpsWVim-eeLHs1kaPfcaG3tNXRdLuIaJgbflLIfrQMqSnkAqp2hKxyLv0jg2yGgIfR2l-2B9Rkw8eDlMxuy4_uY7BLxzrmG6JSyDChqRxYnKLlEGt3XNLuhUavp_hS5NeBXCnEMt9TDGLKZRAS_kZlOSD2CAUUS5xh6bz6JUNSSekh6m5gfIbNfsc6TgXprSd1wQn4t3qiYaClRKrI0721dyVtOZIqDsumQB9W3QEfg"
      },
      "type": "object",
      "required": [
        "jws"
      ],
      "properties": {
        "jws": {
          "description": "The JWS input payload required to register a user which is needed to create a user in our IDP",
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]+[.]{1}[A-Za-z0-9_-]+[.]{1}[A-Za-z0-9_-]+$",
          "minLength": 100,
          "maxLength": 2048
        }
      }
    },
    "type_12": {
      "title": "Registration - Forgot Password Jwt Response",
      "example": {
        "status": "OK"
      },
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "type_13": {
      "title": "Registration - Generate JWS Request",
      "example": {
        "header": {
          "alg": "RS256",
          "kid": "REQ0MUQ5N0NCRTJEMzk3M0U1RkNDQ0U0Q0M1REFBRjhDMjdENUFBQg"
        },
        "payload": {
          "apiKey": "4_eU9dSBxV4hNTM1GXXJMQOA",
          "callID": "45a28caf6eb842239543e3c16076f66c",
          "extensionPoint": "OnBeforeAccountsRegister",
          "data": {
            "params": {
              "email": "King.Arthru@camelot.com",
              "password": "Test123$",
              "profile": {
                
              },
              "lang": "en",
              "regSource": "https://883325708130.us1.my.gigya-ext.com/pages/registration",
              "data": {
                "master": {
                  "uniqueCode": "L8VvEY"
                },
                "terms": false
              }
            },
            "context": {
              "clientIP": "15.158.34.136"
            }
          }
        }
      },
      "type": "object",
      "required": [
        "payload",
        "header"
      ],
      "properties": {
        "payload": {
          "type": "object"
        },
        "header": {
          "type": "object"
        }
      }
    },
    "type_14": {
      "title": "Registration - Generate JWS Response",
      "example": {
        "jws": "eyJhbGciOiJSUzI1NiIsImtpZCI6IlJFUTBNVVE1TjBOQ1JUSkVNemszTTBVMVJrTkRRMFUwUTBNMVJFRkJSamhETWpkRU5VRkJRZyJ9.eyJhcGlLZXkiOiI0X3JLbFAzNGtwQWdKMnMzcHNxMlNXcXciLCJjYWxsSUQiOiI4MzI3MGQ3NDA3ODc0Yjc5OTQzZDJhMzAwZWUyNmMxNCIsImV4dGVuc2lvblBvaW50IjoiT25CZWZvcmVBY2NvdW50c1JlZ2lzdGVyIiwiZGF0YSI6eyJwYXJhbXMiOnsiZW1haWwiOiJ0ZXN0MTAwQHRlc3QuY29tIiwicGFzc3dvcmQiOiJQYXNzd29yZDEwMCQiLCJwcm9maWxlIjp7ImZpcnN0TmFtZSI6IkZpcnN0MTAwIiwibGFzdE5hbWUiOiJMYXN0MTAwIn0sImxhbmciOiJlbiIsInJlZ1NvdXJjZSI6Imh0dHBzOi8vaGNwLWd3LWRldi9zYXAvYmMvdWk1X3VpNS9zYXAvemhjcF9yZWdfbG9nb24vaW5kZXguaHRtbCIsImRhdGEiOnsibWFzdGVyIjp7ImxpY2Vuc2VOdW0iOiIxMjMzNDU2Nzg5MCIsInVuaXF1ZUNvZGUiOiJhYmM5QUQifSwidGVybXMiOnRydWV9LCJwcmVmZXJlbmNlcyI6eyJ0ZXJtcyI6eyJ0b3Nfbm92b2N1cmUiOnsiaXNDb25zZW50R3JhbnRlZCI6IlRSVUUifX0sInByaXZhY3kiOnsicHJpdmFjeV9wb2xpY3lfbm92b2N1cmUiOnsiaXNDb25zZW50R3JhbnRlZCI6IlRSVUUifX19fSwiY29udGV4dCI6eyJjbGllbnRJUCI6IjczLjE2NS44MC4yNTUifX19.SVjAcMcUg6dXU_q-ly8nkMmC1DBdAvnNB3hfbDHmYXrP3kKwsHaLRvClsfXxhT8jaymeb9oVXITwNKPAJR7yveKg86HEKCl9YYNad8jtZg7jpsWVim-eeLHs1kaPfcaG3tNXRdLuIaJgbflLIfrQMqSnkAqp2hKxyLv0jg2yGgIfR2l-2B9Rkw8eDlMxuy4_uY7BLxzrmG6JSyDChqRxYnKLlEGt3XNLuhUavp_hS5NeBXCnEMt9TDGLKZRAS_kZlOSD2CAUUS5xh6bz6JUNSSekh6m5gfIbNfsc6TgXprSd1wQn4t3qiYaClRKrI0721dyVtOZIqDsumQB9W3QEfg"
      },
      "type": "object",
      "required": [
        "jws"
      ],
      "properties": {
        "jws": {
          "description": "The JWS input payload required to register a user which is needed to create a user in our IDP",
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]+[.]{1}[A-Za-z0-9_-]+[.]{1}[A-Za-z0-9_-]+$",
          "minLength": 100,
          "maxLength": 2048
        }
      }
    },
    "inviteGetResponse": {
      "type": "object",
      "required": [
        "inviteStatusCode",
        "lastModifiedDateTime",
        "userType",
        "expirationDateTime",
        "inviteCode",
        "inviteStatus",
        "numberOfAttempts",
        "email",
        "registeredDateTime",
        "createdDateTime"
      ],
      "properties": {
        "inviteStatusCode": {
          "$ref": "#/definitions/inviteStatusCode"
        },
        "lastModifiedDateTime": {
          "description": "Time invite was updated",
          "example": "2023-12-17T05:00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "userType": {
          "$ref": "#/definitions/userType"
        },
        "expirationDateTime": {
          "description": "Date and Time in (UTC TimeZone) the invite will expire. Each experience can have different expiration policys, so experience requirements will determine value. Expiration Date in the past is not permitted.",
          "example": "2023-12-17T05:30:00Z",
          "type": "string",
          "format": "date-time"
        },
        "inviteCode": {
          "$ref": "#/definitions/inviteCode"
        },
        "inviteStatus": {
          "$ref": "#/definitions/inviteStatus"
        },
        "numberOfAttempts": {
          "description": "Number of attempts it took to register successfully",
          "example": 3,
          "type": "integer"
        },
        "email": {
          "$ref": "#/definitions/inviteEmail"
        },
        "registeredDateTime": {
          "description": "Time invite was successfully registered",
          "example": "2024-01-02T15:00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "createdDateTime": {
          "description": "Time invite was generated",
          "example": "2023-12-17T05:00:00Z",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "errorType": {
      "description": "A type, used to characterize the problem and allow for routing within an error handler.\n",
      "type": "string",
      "minLength": 0,
      "maxLength": 100
    },
    "correlationId": {
      "description": "A unique identifier string with a length limit of 50 characters\n",
      "type": "string",
      "minLength": 0,
      "maxLength": 100
    },
    "errorMessageType": {
      "enum": [
        "No invite(s) found.",
        "Active invite found.",
        "Invalid expiration date time. It should be set to 30 min or more into the future.",
        "An Invite for this email is already registered.",
        "Too many attempts were made using this invitecode.",
        "Invite code is expired.",
        "Invite code is already registered.",
        "Invalid invite.",
        "Incorrect invite code is submitted.",
        "No active invitation(s) exist."
      ],
      "type": "string"
    },
    "errorCodeType": {
      "enum": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "10"
      ],
      "type": "string"
    },
    "inviteCodeType": {
      "description": "Two types of codes can be genreated. Numeric or Alphanumeric are supported.",
      "enum": [
        "Numeric",
        "AlphaNumeric"
      ],
      "example": "Numeric",
      "type": "string"
    },
    "appName": {
      "description": "The name of the application. Set by Experience API if used",
      "example": "HCP Portal 2.0",
      "type": "string"
    },
    "userType": {
      "description": "Role name given to a user",
      "enum": [
        "Healthcare Provider",
        "Internal Radiologist",
        "HCP Staff",
        "Commercial Patient",
        "Caregiver"
      ],
      "example": "Healthcare Provider",
      "type": "string"
    },
    "inviteEmail": {
      "type": "string",
      "pattern": "^.+@.+\\..+$",
      "maxLength": 241
    },
    "inviteCode": {
      "description": "The invite code that was generated and supplied to User",
      "example": "320111",
      "type": "string",
      "pattern": "^[A-Za-z0-9\\-_]{1,10}$",
      "minLength": 4,
      "maxLength": 10
    },
    "message": {
      "description": "A message to return to the caller\n",
      "type": "string",
      "minLength": 0,
      "maxLength": 250
    },
    "Phone": {
      "type": "object",
      "required": [
        "number",
        "type"
      ],
      "properties": {
        "number": {
          "$ref": "#/definitions/phone"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "inviteStatusCode": {
      "description": "Status Code of the invite that identified the invite status EG: '01 - Active' OR '02 - Registered'\"\n",
      "enum": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06"
      ],
      "example": "01",
      "type": "string"
    },
    "inviteStatus": {
      "description": "Status of the invite",
      "enum": [
        "Active",
        "Registered",
        "Deleted",
        "Expired",
        "TooManyAttempts",
        "Invalidated"
      ],
      "example": "Registered",
      "type": "string",
      "pattern": "^[^\\s]+([\\s]+[^\\s]+)*$"
    },
    "phone": {
      "description": "Primary contact phone number for the user\n",
      "type": "string",
      "maxLength": 16
    }
  },
  "securityDefinitions": {
    "lib.basicAuth": {
      "type": "basic",
      "x-amf-displayName": "BasicAuth",
      "description": "This security scheme validates requests to the API using Basic authentication.\n",
      "x-amf-describedBy": {
        "headers": {
          "Authorization": {
            "description": "Used to send base64-encoded authorization.\n",
            "type": "string"
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized."
          }
        }
      }
    }
  }
}